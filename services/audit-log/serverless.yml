service:
  name: hoepel-app-audit-log-service

plugins:
  - serverless-webpack
  - serverless-domain-manager
  - serverless-offline

custom:
  stage: ${opt:stage, self:provider.stage}
  secrets: ${file(../../secrets.yml):${self:custom.stage}}
  customDomain:
    domainName: ${file(../../domain.yml):${self:custom.stage}}
    basePath: 'audit-log'
    stage: ${self:custom.stage}
    createRoute53Record: true

provider:
  name: aws
  runtime: nodejs8.10
  region: eu-west-3

  iamRoleStatements:
  - Effect: Allow
    Action:
    - dynamodb:Query
    - dynamodb:Scan
    - dynamodb:GetItem
    - dynamodb:PutItem
    - dynamodb:UpdateItem
    - dynamodb:DeleteItem
    Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"


  environment:
    DB_HOST: "${self:custom.secrets.DB_HOST}"
    DB_PORT: "${self:custom.secrets.DB_PORT}"
    DB_HTTPS: "${self:custom.secrets.DB_HTTPS}"
    DB_USER: "${self:custom.secrets.DB_USER}"
    DB_PASS: "${self:custom.secrets.DB_PASS}"

    AUTH0_AUDIENCE: "${self:custom.secrets.AUTH0_AUDIENCE}"
    AUTH0_DOMAIN: "${self:custom.secrets.AUTH0_DOMAIN}"
    AUTH0_CLIENT_ID: "${self:custom.secrets.AUTH0_CLIENT_ID}"
    AUTH0_CLIENT_SECRET: "${self:custom.secrets.AUTH0_CLIENT_SECRET}"
    AUTH0_PEM_KEY: "${self:custom.secrets.AUTH0_PEM_KEY}"

    DYNAMODB_TABLE: hoepel-app-audit-log-service-${self:custom.stage}

functions:
  authorizer:
    handler: handler.authorizer


  handleIncomingLog:
    handler: handler.handleIncomingLog
    events:
      - sqs: "${self:custom.secrets.AUDIT_LOG_QUEUE_ARN}"

  getLogs:
    handler: handler.getLogs
    events:
      - http:
          method: get
          path: /
          cors: true
          authorizer:
            name: authorizer
            resultTtlInSeconds: 0
            type: request
            permissionNeeded: audit-log:read

